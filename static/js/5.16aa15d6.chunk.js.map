{"version":3,"sources":["assets/style/style.js","assets/images/default.svg","assets/images/marker2.svg","assets/images/flag.svg","assets/images/crosshair.svg","Components/Map/Map.js","util/pathFilter.js","api/transport.js","hooks/useMyToast.js","hooks/useSpots.js","hooks/useAvailability.js","hooks/usePosition.js","hooks/useShape.js","Components/Navbar/Navbar.js","util/combineData.js","Components/SpecialBottons/MapModeButton.js","Pages/BikePage.js"],"names":["textOverflow","whiteSpace","overflow","maxW","containerStyle","width","height","MyMap","lat","lng","nearbySpots","routePath","mode","useState","currentMap","setCurrentMap","isLoaded","useJsApiLoader","id","googleMapsApiKey","process","currentPath","setCurrentPath","useEffect","Geometry","replace","trim","split","reduce","acc","cur","curArr","panTo","spots","flex","w","mapContainerStyle","zoom","onLoad","e","console","log","setCenter","options","gestureHandling","zoomControl","scaleControl","fullscreenControl","mapTypeControl","clusterer","map","spot","position","StationPosition","PositionLat","PositionLon","icon","url","markerIcon","markerIcon2","labelOrigin","window","google","maps","Point","label","text","AvailableRentBikes","AvailableReturnBikes","fontSize","color","onClick","StationID","polyline","path","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","corsshairIcon","length","flagIcon","memo","getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","Authorization","getHMAC","bike","axios","create","headers","baseURL","cyclingRoute","useMyToast","toast","useToast","successToast","successText","isActive","title","status","duration","isClosable","warningToast","warningText","infoToast","infoText","errorToast","errorText","useStation","setSpots","search","a","option","city","finalUrl","get","data","useAvailability","usePosition","setLat","setLng","error","setError","onChange","coords","latitude","longitude","onError","message","geo","navigator","geolocation","watcher","watchPosition","clearWatch","useShape","skip","skipString","Navbar","onHamburgerClick","children","routeName","navigate","useNavigate","pathname","useLocation","top","bg","boxShadow","alignItems","py","px","minH","justifyContent","base","md","display","left","h","alignSelf","cursor","size","m","variant","marginLeft","as","FaRoute","combineData","arr1","arr2","target","combine","concat","x","Object","assign","keys","k","MapModeButton","mapMode","rwdStyle","borderRadius","letterSpacing","gridGap","transition","MdDirectionsBike","verticalAlign","padding","transform","FaParking","BikePage","useSpots","nearbyStations","searchNearbyStations","stationDetail","searchStationDetail","setMapMode","flexDirection"],"mappings":"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","file":"static/js/5.16aa15d6.chunk.js","sourcesContent":["export const textOverflow = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  maxW: '100px'\n}\n","export default __webpack_public_path__ + \"static/media/default.d8e6aa9f.svg\";","export default __webpack_public_path__ + \"static/media/marker2.4fa01efe.svg\";","export default __webpack_public_path__ + \"static/media/flag.a2df00b5.svg\";","export default __webpack_public_path__ + \"static/media/crosshair.a8fe395c.svg\";","import { Flex } from '@chakra-ui/react'\nimport { memo, useState, useEffect } from 'react'\nimport markerIcon from 'assets/images/default.svg'\nimport markerIcon2 from 'assets/images/marker2.svg'\nimport flagIcon from 'assets/images/flag.svg'\nimport corsshairIcon from 'assets/images/crosshair.svg'\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Polyline,\n  MarkerClusterer\n} from '@react-google-maps/api'\nimport PropTypes from 'prop-types'\nimport { pathFilter } from 'util/pathFilter'\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n}\n\nconst MyMap = ({ lat, lng, nearbySpots, routePath, mode = 'default' }) => {\n  const [currentMap, setCurrentMap] = useState(null)\n  // const [currentInfo, setCurrentInfo] = useState(null)\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY\n  })\n  const [currentPath, setCurrentPath] = useState(null)\n  useEffect(() => {\n    if (routePath) {\n      setCurrentPath(pathFilter(routePath.Geometry))\n      // console.log(currentPath)\n    }\n  }, [routePath])\n  useEffect(() => {\n    if (currentPath) {\n      currentMap.panTo(currentPath[0])\n    }\n  }, [currentPath])\n  const renderStations = spots => {\n    // console.log(spots)\n    return (\n      spots && (\n        <MarkerClusterer>\n          {clusterer =>\n            spots.map(spot => (\n              <div key={spot.StationID}>\n                <Marker\n                  clusterer={clusterer}\n                  position={{\n                    lat: spot.StationPosition.PositionLat,\n                    lng: spot.StationPosition.PositionLon\n                  }}\n                  options={{\n                    icon: {\n                      url: mode === 'default' ? markerIcon : markerIcon2,\n                      labelOrigin: new window.google.maps.Point(20, 19)\n                    },\n                    label: {\n                      text:\n                        mode === 'default'\n                          ? spot.AvailableRentBikes + ''\n                          : spot.AvailableReturnBikes + '',\n                      fontSize: '20px',\n                      color: mode === 'default' ? '#000000' : '#fed801'\n                    }\n                  }}\n                  onClick={() =>\n                    currentMap.panTo({\n                      lat: spot.StationPosition.PositionLat,\n                      lng: spot.StationPosition.PositionLon\n                    })\n                  }\n                />\n              </div>\n            ))\n          }\n        </MarkerClusterer>\n      )\n    )\n  }\n\n  // const renderBox = spots => {\n  //   return (\n  //     spots &&\n  //     spots.map(spot => (\n  //       <div key={spot.StationID}>\n  //         <InfoBox\n  //           position={{\n  //             lat: spot.StationPosition.PositionLat,\n  //             lng: spot.StationPosition.PositionLon\n  //           }}\n  //           options={{\n  //             closeBoxURL: '',\n  //             alignBottom: true,\n  //             pixelOffset: new window.google.maps.Size(-14.3, -12)\n  //           }}\n  //           onClick={() =>\n  //             currentMap.panTo({\n  //               lat: spot.StationPosition.PositionLat,\n  //               lng: spot.StationPosition.PositionLon\n  //             })\n  //           }\n  //         >\n  //           <Flex\n  //             transition='all 0.5s ease'\n  //             bg={mode === 'default' ? 'brand.yellow' : 'black'}\n  //             color={mode === 'default' ? 'black' : 'brand.yellow'}\n  //             justifyContent='center'\n  //             alignItems='center'\n  //             borderRadius='100%'\n  //             w='28px'\n  //             h='28px'\n  //           >\n  //             <Text fontWeight='700'>\n  //               {mode === 'default'\n  //                 ? spot.AvailableRentBikes\n  //                 : spot.AvailableReturnBikes}\n  //             </Text>\n  //           </Flex>\n  //         </InfoBox>\n  //       </div>\n  //     ))\n  //   )\n  // }\n\n  const onLoad = polyline => {\n    console.log('polyline: ', polyline)\n  }\n\n  const options = {\n    strokeColor: '#000000',\n    strokeOpacity: 0.6,\n    strokeWeight: 5,\n    fillColor: '#000000',\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  }\n  return isLoaded && lat ? (\n    <Flex flex={1} w='100%' overflow='hidden'>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        zoom={15}\n        onLoad={e => {\n          console.log(e)\n          setCurrentMap(e)\n          e.setCenter({ lat, lng })\n        }}\n        options={{\n          gestureHandling: 'greedy',\n          zoomControl: false,\n          scaleControl: false,\n          fullscreenControl: false,\n          mapTypeControl: false\n        }}\n      >\n        {/* <Marker position={{ lat, lng }} /> */}\n        {nearbySpots && renderStations(nearbySpots)}\n        {/* {nearbySpots && renderBox(nearbySpots)} */}\n        <Polyline onLoad={onLoad} path={currentPath} options={options} />\n        {currentPath && (\n          <>\n            <Marker\n              position={{\n                lat: currentPath[0].lat,\n                lng: currentPath[0].lng\n              }}\n              options={{\n                icon: {\n                  url: corsshairIcon\n                }\n              }}\n            />\n            <Marker\n              position={{\n                lat: currentPath[currentPath.length - 1].lat,\n                lng: currentPath[currentPath.length - 1].lng\n              }}\n              options={{\n                icon: {\n                  url: flagIcon\n                }\n              }}\n            />\n          </>\n        )}\n      </GoogleMap>\n    </Flex>\n  ) : (\n    <></>\n  )\n}\n\nMyMap.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  nearbySpots: PropTypes.array,\n  routePath: PropTypes.object,\n  mode: PropTypes.string\n}\n\nexport default memo(MyMap)\n","export const pathFilter = pathStr => {\n  const filterResult = pathStr.replace(/[A-Z'()']{1}/gm, '').trim()\n  const finalResult = filterResult.split(',').reduce((acc, cur) => {\n    const curArr = cur.split(' ')\n    return [...acc, { lat: curArr[1] * 1, lng: curArr[0] * 1 }]\n  }, [])\n  return finalResult\n}\n","import axios from 'axios'\nimport jsSHA from 'jssha'\nconst getAuthorizationHeader = () => {\n  const AppID = process.env.REACT_APP_APPID\n  const AppKey = process.env.REACT_APP_APPKEY\n  const GMTString = new Date().toGMTString()\n  const ShaObj = new jsSHA('SHA-1', 'TEXT')\n  ShaObj.setHMACKey(AppKey, 'TEXT')\n  ShaObj.update('x-date: ' + GMTString)\n  const HMAC = ShaObj.getHMAC('B64')\n  const Authorization =\n    'hmac username=\"' +\n    AppID +\n    '\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' +\n    HMAC +\n    '\"'\n  return { Authorization: Authorization, 'X-Date': GMTString }\n}\nexport const bike = axios.create({\n  headers: getAuthorizationHeader(),\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Bike/'\n})\nexport const cyclingRoute = axios.create({\n  headers: getAuthorizationHeader(),\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Cycling/Shape'\n})\n\n// export const getSpots = async (city = '') => {\n//   try {\n//     const res = await travelInfo.get(`ScenicSpot/${city}?$top=30&$format=JSON`)\n//     console.log(res)\n//   } catch (error) {\n//     console.log(error)\n//   }\n// }\n","import { useToast } from '@chakra-ui/toast'\n\nconst useMyToast = (id) => {\n  const toast = useToast()\n  const warningToast = (warningText) => {\n    if (!toast.isActive(id)) {\n      return toast({\n        id,\n        title: warningText,\n        position: 'bottom',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true\n      })\n    }\n  }\n  const errorToast = (errorText) => {\n    if (!toast.isActive(id)) {\n      return toast({\n        id,\n        title: errorText,\n        position: 'bottom',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      })\n    }\n  }\n  const successToast = (successText) => {\n    if (!toast.isActive(id)) {\n      return toast({\n        id,\n        title: successText,\n        position: 'bottom',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      })\n    }\n  }\n  const infoToast = (infoText) => {\n    if (!toast.isActive(id)) {\n      return toast({\n        id,\n        title: infoText,\n        position: 'bottom',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      })\n    }\n  }\n  return { successToast, warningToast, infoToast, errorToast }\n}\n\nexport default useMyToast\n","import { useState } from 'react'\nimport { bike } from 'api/transport'\nimport useMyToast from './useMyToast'\n\nconst useStation = () => {\n  const [spots, setSpots] = useState(null)\n  const { errorToast } = useMyToast('error')\n  // useEffect(() => {\n  //   search({ option, city, lat, lng })\n  // }, [])\n  const search = async ({ option, city, lat, lng }) => {\n    let finalUrl\n    if (option === 'nearby') {\n      finalUrl = `Station/NearBy?$top=30&$spatialFilter=nearby(${lat}, ${lng}, 1000)&$format=JSON`\n    } else {\n      finalUrl = `Station/${city}?$top=30&$format=JSON`\n    }\n    try {\n      const { data } = await bike.get(finalUrl)\n      setSpots(data)\n    } catch (error) {\n      errorToast('權限到期，請重新整理後再試一次')\n    }\n  }\n  return [spots, search]\n}\n\nexport default useStation\n","import { useState } from 'react'\nimport { bike } from 'api/transport'\n\nconst useAvailability = () => {\n  const [spots, setSpots] = useState([])\n  const search = async ({ option, city, lat, lng }) => {\n    let finalUrl\n    if (option === 'nearby') {\n      finalUrl = `Availability/NearBy?$top=30&$spatialFilter=nearby(${lat}, ${lng}, 1000)&$format=JSON`\n    } else {\n      finalUrl = `Availability/${city}?$top=30&$format=JSON`\n    }\n    try {\n      const { data } = await bike.get(finalUrl)\n      setSpots(data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  return [spots, search]\n}\n\nexport default useAvailability\n","import { useEffect, useState } from 'react'\nconst usePosition = () => {\n  const [lat, setLat] = useState(null)\n  const [lng, setLng] = useState(null)\n  const [error, setError] = useState(null)\n  const onChange = ({ coords }) => {\n    setLat(coords.latitude)\n    setLng(coords.longitude)\n  }\n  const onError = error => {\n    setError(error.message)\n  }\n  useEffect(() => {\n    const geo = navigator.geolocation\n    const watcher = geo.watchPosition(onChange, onError)\n    if (!geo) {\n      setError('Geolocation is not supported')\n      return\n    }\n    return () => geo.clearWatch(watcher)\n  }, [])\n\n  return [lat, lng, error]\n}\n\nexport default usePosition\n","import { useState } from 'react'\nimport { cyclingRoute } from 'api/transport'\nimport useMyToast from './useMyToast'\n\nconst useShape = () => {\n  const [spots, setSpots] = useState([])\n  const { errorToast } = useMyToast('error')\n  const search = async ({ city, skip }) => {\n    const skipString = skip ? `$skip=${skip}` : ''\n    const tail = '$top=30&$format=JSON'\n    const finalUrl = `${city}?${skipString}&${tail}`\n    try {\n      const { data } = await cyclingRoute.get(finalUrl)\n      setSpots(data)\n    } catch (error) {\n      errorToast('權限到期，請重新整理後再試一次')\n    }\n  }\n  return [spots, search]\n}\n\nexport default useShape\n","// import { useRef, useEffect } from 'react'\nimport { Flex, Button, Heading, Icon } from '@chakra-ui/react'\n// import { HamburgerIcon } from '@chakra-ui/icons'\nimport { useNavigate, useLocation } from 'react-router'\nimport { FaRoute } from 'react-icons/fa'\nimport { ChevronLeftIcon } from '@chakra-ui/icons'\nimport { Logo } from 'assets/logo/logo'\nimport Proptype from 'prop-types'\nimport { textOverflow } from 'assets/style/style'\n\nconst Navbar = ({ onHamburgerClick, children, routeName }) => {\n  const navigate = useNavigate()\n  const { pathname } = useLocation()\n  return (\n    <Flex\n      position='sticky'\n      zIndex='sticky'\n      top='0'\n      bg='brand.yellow'\n      boxShadow='sm'\n      w='100%'\n      alignItems='center'\n      py={5}\n      px={10}\n      color='white'\n      minH='80px'\n      justifyContent={{ base: 'center', md: 'space-between' }}\n    >\n      <ChevronLeftIcon\n        display={{ base: 'block', md: 'none' }}\n        color='brand.black'\n        position='absolute'\n        left='10px'\n        h={10}\n        w={10}\n        onClick={() => navigate('/')}\n      />\n      <Flex\n        alignSelf='center'\n        cursor='pointer'\n        onClick={() => navigate('/')}\n        display={{ base: 'none', md: 'block' }}\n      >\n        <Logo />\n      </Flex>\n\n      {routeName && (\n        <Heading\n          {...textOverflow}\n          maxW={{ base: '250px', md: '500px' }}\n          size='sm'\n          color='black'\n          m='auto'\n        >\n          {routeName}\n        </Heading>\n      )}\n      {children}\n      {/* <Button\n        variant='default'\n        marginLeft='auto'\n        boxShadow='none'\n        w='40px'\n        h='40px'\n        onClick={onHamburgerClick}\n        onFocus={() => document.activeElement.blur()}\n        size='sm'\n      >\n        <HamburgerIcon w={5} h={5} />\n      </Button> */}\n      {pathname !== '/nearbybike' && (\n        <Button\n          variant='default'\n          marginLeft='auto'\n          boxShadow='none'\n          w='40px'\n          h='40px'\n          onClick={onHamburgerClick}\n          size='sm'\n        >\n          <Icon as={FaRoute} w={8} h={8} />\n        </Button>\n      )}\n    </Flex>\n  )\n}\n\nNavbar.propTypes = {\n  onHamburgerClick: Proptype.func,\n  children: Proptype.node,\n  routeName: Proptype.string\n}\n\nexport default Navbar\n","const combineData = (arr1, arr2, target) => {\n  const combine = arr1.concat(arr2).reduce((acc, x) => {\n    acc[x[target]] = Object.assign(acc[x[target]] || {}, x)\n    return acc\n  }, {})\n  const result = Object.keys(combine).map(k => combine[k])\n  return result\n}\n\nexport default combineData\n","import { Button, Flex, Text, Icon, Box, Circle } from '@chakra-ui/react'\nimport { MdDirectionsBike } from 'react-icons/md'\nimport { FaParking } from 'react-icons/fa'\nimport PropTypes from 'prop-types'\nconst MapModeButton = ({ onClick, mapMode, rwdStyle }) => {\n  return (\n    <Button\n      {...rwdStyle}\n      onClick={onClick}\n      bg='white'\n      position='relative'\n      borderRadius='999px'\n    >\n      <Flex\n        letterSpacing='15px'\n        alignItems='center'\n        zIndex={3}\n        gridGap='10px'\n        color={mapMode === 'default' ? 'brand.yellow' : 'brand.black'}\n        transition='0.5s color ease'\n      >\n        <Icon as={MdDirectionsBike} verticalAlign='center' h={6} w={6} />\n        <Text>租車</Text>\n      </Flex>\n      <Box w='50px' padding='3px' h='auto' bg='brand.100' borderRadius='20px'>\n        <Circle\n          w='50%'\n          h='100%'\n          borderRadius='999px'\n          bg='brand.black'\n          transition='all 0.5s ease'\n          position='absolute'\n          top={0}\n          left={0}\n          zIndex={2}\n          transform={\n            mapMode === 'default' ? 'translateX(0)' : 'translateX(100%)'\n          }\n        />\n      </Box>\n      <Flex\n        letterSpacing='15px'\n        alignItems='center'\n        transition='0.5s color ease'\n        color={mapMode === 'default' ? 'brand.black' : 'brand.yellow'}\n        zIndex={3}\n        gridGap='10px'\n      >\n        <Icon as={FaParking} verticalAlign='center' h={6} w={6} />\n        <Text>還車</Text>\n      </Flex>\n    </Button>\n  )\n}\n\nMapModeButton.propTypes = {\n  onClick: PropTypes.func,\n  mapMode: PropTypes.string,\n  rwdStyle: PropTypes.object\n}\n\nexport default MapModeButton\n","import { useEffect, useState } from 'react'\nimport { Flex, Text } from '@chakra-ui/react'\nimport { MyMap } from 'Components/Map'\nimport { usePosition, useSpots, useAvailability } from 'hooks'\nimport combineData from 'util/combineData'\nimport { Navbar } from 'Components/Navbar'\nimport { MapModeButton } from 'Components/SpecialBottons'\n\nconst BikePage = () => {\n  const [latitude, longitude, error] = usePosition()\n  const [nearbyStations, searchNearbyStations] = useSpots()\n  const [stationDetail, searchStationDetail] = useAvailability()\n  const [mapMode, setMapMode] = useState('default')\n  const switchMode = () => {\n    if (mapMode === 'default') {\n      return setMapMode('park')\n    }\n    setMapMode('default')\n  }\n  useEffect(() => {\n    if (latitude && longitude) {\n      searchNearbyStations({\n        option: 'nearby',\n        lat: latitude,\n        lng: longitude\n      })\n      searchStationDetail({\n        option: 'nearby',\n        lat: latitude,\n        lng: longitude\n      })\n    }\n  }, [latitude, longitude])\n  // const search = e => {\n  //   e.preventDefault()\n  //   errorToast('NOT READY YET')\n  //   document.activeElement.blur()\n  // }\n  return (\n    <>\n      <Flex flexDirection='column' h='100vh'>\n        <Navbar>\n          {/* <Heading color='brand.black' size='sm' m='auto'>\n            {searchTerm || '您附近的站點'}\n          </Heading> */}\n          <MapModeButton onClick={switchMode} mapMode={mapMode} />\n        </Navbar>\n        {/* <Box\n          as='form'\n          display='flex'\n          w='300px'\n          position='absolute'\n          zIndex={10}\n          top={{ base: '25%', md: '18%' }}\n          left='50%'\n          transform='translate(-50%, -50%)'\n          onSubmit={search}\n        >\n          <FormControl display='flex' gridGap='6px'>\n            <Input placeholder='搜尋站點' bg='brand.white' />\n            <IconButton\n              type='submit'\n              color='white'\n              background='brand.black'\n              aria-label='Search database'\n              icon={<SearchIcon />}\n              onFocus={() => document.activeElement.blur()}\n            />\n          </FormControl>\n        </Box> */}\n\n        {error ? (\n          <Text>{error}</Text>\n        ) : (\n          latitude && (\n            <MyMap\n              mode={mapMode}\n              lat={latitude}\n              lng={longitude}\n              nearbySpots={\n                nearbyStations &&\n                stationDetail &&\n                combineData(nearbyStations, stationDetail, 'StationID')\n              }\n            />\n          )\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default BikePage\n"],"sourceRoot":""}